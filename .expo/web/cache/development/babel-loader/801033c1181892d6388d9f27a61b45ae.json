{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { BarCodeScanner } from \"expo-barcode-scanner\";\nimport LottieView from \"lottie-react-native\";\nimport client from \"../api/client\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport moment from \"moment\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { COLORS } from \"../constants/theme\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get(\"window\"),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nvar ScanTicketScreen = function ScanTicketScreen(_ref) {\n  var route = _ref.route;\n  return _jsx(ScanLogic, {\n    route: route\n  });\n};\nvar ScanLogic = function ScanLogic(props) {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    hasPermission = _useState2[0],\n    setHasPermission = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    scanned = _useState4[0],\n    setScanned = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    showAnimation = _useState6[0],\n    setShowAnimation = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    userToken = _useState8[0],\n    setUserToken = _useState8[1];\n  var _useState9 = useState(null),\n    _useState10 = _slicedToArray(_useState9, 2),\n    userInfo = _useState10[0],\n    setUserInfo = _useState10[1];\n  var _useState11 = useState(null),\n    _useState12 = _slicedToArray(_useState11, 2),\n    eventTitle = _useState12[0],\n    setEventTitle = _useState12[1];\n  var _useState13 = useState(null),\n    _useState14 = _slicedToArray(_useState13, 2),\n    eventTime = _useState14[0],\n    setEventTime = _useState14[1];\n  var _useState15 = useState([]),\n    _useState16 = _slicedToArray(_useState15, 2),\n    scannedTickets = _useState16[0],\n    setScannedTickets = _useState16[1];\n  var navigation = useNavigation();\n  useEffect(function () {\n    var getBarCodeScannerPermissions = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        var _yield$BarCodeScanner = yield BarCodeScanner.requestPermissionsAsync(),\n          status = _yield$BarCodeScanner.status;\n        setHasPermission(status === 'granted');\n      });\n      return function getBarCodeScannerPermissions() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    getBarCodeScannerPermissions();\n  }, []);\n  var getData = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var value = yield AsyncStorage.getItem('userInfo');\n        var _userToken = yield AsyncStorage.getItem(\"userToken\");\n        var title = yield AsyncStorage.getItem(\"eventTitle\");\n        var _eventTime = yield AsyncStorage.getItem('eventTime');\n        if (value !== null && _userToken !== null && title !== null) {\n          setUserInfo(JSON.parse(value));\n          setUserToken(_userToken);\n          setEventTitle(title);\n          if (_eventTime !== null) {\n            var endTime = moment(_eventTime, 'h:mmA');\n            var currentTime = moment();\n            if (currentTime.isAfter(endTime)) {\n              setEventTime(null);\n              setEventTitle(null);\n              try {\n                yield AsyncStorage.removeItem('eventTime');\n                yield AsyncStorage.removeItem('eventTitle');\n              } catch (e) {\n                alert(\"\" + e);\n              }\n              navigation.navigate('ProfileScreen');\n              alert(\"sorry Admin, your time as a scanner for this event is elapsed\");\n              return;\n            }\n            var timeLeft = moment.duration(endTime.diff(currentTime));\n            setTimeout(getData, timeLeft.asMilliseconds());\n          }\n        }\n      } catch (e) {\n        console.log(\"\" + e);\n        alert(\"\" + e.message);\n      }\n    });\n    return function getData() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    getData();\n  }, []);\n  var scanning = false;\n  var handleBarCodeScanned = function () {\n    var _ref5 = _asyncToGenerator(function* (_ref4) {\n      var type = _ref4.type,\n        data = _ref4.data;\n      if (scanning) {\n        return;\n      }\n      scanning = true;\n      setScanned(true);\n      var token = userToken;\n      var title = eventTitle;\n      console.log(data);\n      console.log(token);\n      console.log(title);\n      var config = {\n        headers: {\n          Authorization: \"Bearer \" + token\n        },\n        \"content-type\": \"multipart/form-data\"\n      };\n      var formData = new FormData();\n      formData.append(\"token\", data);\n      formData.append(\"eventTitle\", title);\n      try {\n        var res = yield client.post(\"/tickets/scan\", formData, config);\n        console.log(res.status);\n        console.log(res.data);\n        if (res.status === 200) {\n          alert(\"QR code has been successfully scanned\");\n        } else {\n          alert(\"Error scanning QR code. Please try again.\");\n        }\n      } catch (error) {\n        console.log(error);\n        if (error.response && error.response.status === 400) {\n          console.log(\"scanning canceled\");\n          alert(error.response.data.message);\n        } else {\n          console.log(error);\n          alert(\"Error scanning QR code. Please try again.\");\n        }\n      } finally {\n        scanning = false;\n        setScanned(false);\n      }\n    });\n    return function handleBarCodeScanned(_x) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  return _jsxs(_Fragment, {\n    children: [_jsx(View, {\n      style: styles.container,\n      children: _jsx(BarCodeScanner, {\n        onBarCodeScanned: scanned ? undefined : handleBarCodeScanned,\n        style: StyleSheet.absoluteFillObject\n      })\n    }), _jsx(View, {\n      style: {\n        height: 347,\n        width: 300,\n        backgroundColor: COLORS.transparent,\n        position: \"absolute\",\n        alignSelf: \"center\",\n        bottom: height / 6,\n        borderColor: COLORS.white,\n        borderRadius: 20,\n        borderWidth: 3,\n        alignContent: \"center\"\n      }\n    }), _jsx(View, {\n      style: styles.animation,\n      children: showAnimation && _jsx(LottieView, {\n        source: require(\"../assets/animations/qr-scan.json\"),\n        speed: 0.5,\n        autoPlay: true,\n        loop: false,\n        style: {\n          width: 100,\n          height: 100,\n          bottom: 280,\n          position: \"absolute\",\n          right: 10\n        },\n        onAnimationFinish: function onAnimationFinish() {\n          return setShowAnimation(false);\n        }\n      })\n    })]\n  });\n};\nexport default ScanTicketScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    height: height,\n    width: width,\n    alignSelf: \"center\",\n    top: 30\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","Text","View","StyleSheet","Button","Dimensions","FlatList","BarCodeScanner","LottieView","client","AsyncStorage","moment","useNavigation","COLORS","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","_Dimensions$get","get","width","height","ScanTicketScreen","_ref","route","ScanLogic","props","_useState","_useState2","_slicedToArray","hasPermission","setHasPermission","_useState3","_useState4","scanned","setScanned","_useState5","_useState6","showAnimation","setShowAnimation","_useState7","_useState8","userToken","setUserToken","_useState9","_useState10","userInfo","setUserInfo","_useState11","_useState12","eventTitle","setEventTitle","_useState13","_useState14","eventTime","setEventTime","_useState15","_useState16","scannedTickets","setScannedTickets","navigation","getBarCodeScannerPermissions","_ref2","_asyncToGenerator","_yield$BarCodeScanner","requestPermissionsAsync","status","apply","arguments","getData","_ref3","value","getItem","title","JSON","parse","endTime","currentTime","isAfter","removeItem","e","alert","navigate","timeLeft","duration","diff","setTimeout","asMilliseconds","console","log","message","scanning","handleBarCodeScanned","_ref5","_ref4","type","data","token","config","headers","Authorization","formData","FormData","append","res","post","error","response","_x","children","style","styles","container","onBarCodeScanned","undefined","absoluteFillObject","backgroundColor","transparent","position","alignSelf","bottom","borderColor","white","borderRadius","borderWidth","alignContent","animation","source","require","speed","autoPlay","loop","right","onAnimationFinish","create","flex","top"],"sources":["C:/Users/STEPHEN/Desktop/busa_app1-main/screens/ScanTicketScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Text, View, StyleSheet, Button, Dimensions, FlatList } from \"react-native\";\r\nimport { BarCodeScanner } from \"expo-barcode-scanner\";\r\nimport LottieView from \"lottie-react-native\";\r\nimport client from \"../api/client\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport moment from \"moment\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { COLORS } from \"../constants/theme\";\r\nconst { width, height } = Dimensions.get(\"window\");\r\n\r\nconst ScanTicketScreen = ({route}) => {\r\n\treturn <ScanLogic route={route} />;\r\n};\r\n\r\nconst ScanLogic = (props) => {\r\n\r\n  // alert the user time has elapsed\r\n  // write functionality that after time has elapsed, take him back to the settings page\r\n\t  const [hasPermission, setHasPermission] = useState(null);\r\n\t   const [scanned, setScanned] = useState(false);\r\n\t  const [showAnimation, setShowAnimation] = useState(false);\r\n\t   const [userToken, setUserToken] = useState(null)\r\n\t  const [userInfo, setUserInfo] = useState(null)\r\n    const [eventTitle, setEventTitle] = useState(null)\r\n    const [eventTime, setEventTime] = useState(null)\r\n\tconst [scannedTickets, setScannedTickets] = useState([]);\r\n\r\n\r\n    const navigation = useNavigation()\r\n\r\n\t  useEffect(() => {\r\n\t    const getBarCodeScannerPermissions = async () => {\r\n\t      const { status } = await BarCodeScanner.requestPermissionsAsync();\r\n\t      setHasPermission(status === 'granted');\r\n\t    };\r\n\r\n\t    getBarCodeScannerPermissions();\r\n\t  }, []);\r\n\r\n\r\n\t  const  getData = async () => {\r\n\t    try {\r\n\t      const value = await AsyncStorage.getItem('userInfo')\r\n\t      const userToken = await AsyncStorage.getItem(\"userToken\")\r\n        const title =  await AsyncStorage.getItem(\"eventTitle\")\r\n\t\t\t  const eventTime = await AsyncStorage.getItem('eventTime');\r\n        \r\n\t      if(value !== null && userToken !== null &&title !== null ) {\r\n\t      setUserInfo(JSON.parse(value))\r\n\t      setUserToken(userToken)\r\n        setEventTitle(title)\r\n     \r\n         if(eventTime !==null){\r\n          const endTime = moment(eventTime, 'h:mmA');\r\n          const currentTime = moment();\r\n\r\n          if (currentTime.isAfter(endTime)) {\r\n            // The time for the event has ended, navigate to profile screen\r\n            setEventTime(null);\r\n            setEventTitle(null);\r\n            \r\n            try {\r\n            await AsyncStorage.removeItem('eventTime');\r\n            await AsyncStorage.removeItem('eventTitle');\r\n\t\t} catch (e) {\r\n\t\t\t// console.log(e);\r\n\t\t\talert(`${e}`)\r\n\t\t}\r\n\t\tnavigation.navigate('ProfileScreen');\r\n\t\talert(\"sorry Admin, your time as a scanner for this event is elapsed\")\r\n            return;\r\n          }\r\n\r\n          const timeLeft = moment.duration(endTime.diff(currentTime));\r\n        setTimeout(getData, timeLeft.asMilliseconds());\r\n\r\n         }\r\n\r\n\r\n\t      }\r\n\t    } catch(e) {\r\n\t      console.log(`${e}`)\r\n\t\t  alert (`${e.message}`)\r\n\t    }\r\n\t    }\r\n\r\n\t     useEffect(()=>{\r\n\t    getData()\r\n\t    },[])\r\n\r\n\t\t\r\n\r\n\t\tlet scanning = false;\r\n\r\n\t\t  const handleBarCodeScanned = async ({ type, data }) => {\r\n\t\t\tif (scanning) {\r\n\t\t\t  // Function is already running, don't execute again\r\n\t\t\t  return;\r\n\t\t\t}\r\n\t\t  \r\n\t\t\tscanning = true; // Set flag to indicate function is running\r\n\t\t  setScanned(true)\r\n\t\t\tconst token = userToken;\r\n\t\t\tconst title = eventTitle;\r\n\t\t  \r\n\t\t\tconsole.log(data);\r\n\t\t\tconsole.log(token);\r\n\t\t\tconsole.log(title);\r\n\t\t  \r\n\t\t\tconst config = {\r\n\t\t\t  headers: { Authorization: `Bearer ${token}` },\r\n\t\t\t  \"content-type\": \"multipart/form-data\",\r\n\r\n\t\t\t};\r\n\t\t  \r\n\t\t\tconst formData = new FormData();\r\n\t\t\tformData.append(\"token\", data);\r\n\t\t\tformData.append(\"eventTitle\", title);\r\n\t\t  \r\n\t\t\ttry {\r\n\t\t\t  const res = await client.post(`/tickets/scan`, formData, config);\r\n\t\t\t  console.log(res.status);\r\n\t\t\t  console.log(res.data);\r\n\t\t  \r\n\t\t\t  if (res.status === 200) {\r\n\t\t\t\talert(`QR code has been successfully scanned`);\r\n\t\t\t  } else {\r\n\t\t\t\talert(`Error scanning QR code. Please try again.`);\r\n\t\t\t  }\r\n\t\t\t} catch (error) {\r\n\t\t\t  console.log(error)\r\n\t\t\t  if (error.response && error.response.status === 400) {\r\n\t\t\t\tconsole.log(\"scanning canceled\");\r\n\t\t\t\talert(error.response.data.message)\r\n\t\t\t  } else {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t\talert(\"Error scanning QR code. Please try again.\");\r\n\t\t\t  }\r\n\t\t\t} finally {\r\n\t\t\t  scanning = false; // Set flag to indicate function is no longer running\r\n\t\t\t  setScanned(false);\r\n\t\t\t}\r\n\t\t  };\r\n\t\t  \r\n\t\t  \r\n\r\n\r\n\t\t  \r\n\t//   if (hasPermission === null) {\r\n\t//     return <Text>Requesting for camera permission</Text>;\r\n\t//   }\r\n\t//   if (hasPermission === false) {\r\n\t//     return <Text>No access to camera</Text>;\r\n\t//   }\r\n\r\n\r\n\t  return (\r\n\t    <>\r\n\t    <View style={styles.container}>\r\n\r\n\t      <BarCodeScanner\r\n\t      onBarCodeScanned={scanned ? undefined : handleBarCodeScanned}\r\n\t        style={StyleSheet.absoluteFillObject}\r\n\t      />\r\n\r\n\t      {/* {scanned &&\r\n\t      <View style={{backgroundColor:\"white\", width:100, height:30, position:\"absolute\", alignItems:\"center\", bottom:height/10, left:width/3}}>\r\n\t    <Text style={{fontFamily:\"Poppins3\", fontSize:18, color:\"blue\", position:\"absolute\", bottom:-2, alignSelf:\"center\",}} onPress={()=>setScanned(false)}>Re-scan</Text>\r\n\t    </View>\r\n\t    } */}\r\n\t    </View>\r\n\t    <View style={{height:347, width:300, backgroundColor:COLORS.transparent, position:\"absolute\", alignSelf:\"center\", bottom:height/6, borderColor:COLORS.white, borderRadius:20, borderWidth:3, alignContent:\"center\"}}/>\r\n\r\n\t<View style={styles.animation}>\r\n\t{showAnimation && (\r\n\t  <LottieView\r\n\t   source={require(\"../assets/animations/qr-scan.json\")}\r\n\t   speed={0.5}\r\n\t   autoPlay\r\n\t   loop={false}\r\n\t   style={{width:100, height:100, bottom:280, position:\"absolute\", right:10}}\r\n\t  onAnimationFinish={()=> setShowAnimation(false)}\r\n\t  />\r\n\t)}\r\n\t</View>\r\n\t </>\r\n\t   );\r\n};\r\nexport default ScanTicketScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tflex: 1,\r\n\t\theight: height,\r\n\t\twidth: width,\r\n\t\talignSelf: \"center\",\r\n\t\ttop: 30,\r\n\t},\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}