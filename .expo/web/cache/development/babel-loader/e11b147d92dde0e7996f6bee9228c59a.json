{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useEffect, useState } from 'react';\nimport { Formik } from 'formik';\nimport { FormInput } from \"../Components/FormInput\";\nimport * as Yup from \"yup\";\nimport { FormSubmitBtn } from \"../Components/FormSubmitBtn\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport client from \"../api/client\";\nimport axios from 'axios';\nimport { StackActions, useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ProcessDetailsScreen = function ProcessDetailsScreen() {\n  var navigation = useNavigation();\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var getEmail = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var _email = yield AsyncStorage.getItem(\"email\");\n        if (_email !== null) {\n          setEmail(_email);\n        }\n      } catch (e) {\n        console.log(\"an error occured \" + e);\n      }\n    });\n    return function getEmail() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    getEmail();\n  }, []);\n  var userInfo = {\n    email: email,\n    title: \"Game Show\"\n  };\n  var initializeTransaction = function () {\n    var _ref2 = _asyncToGenerator(function* (values) {\n      var res = yield client.post(\"/pay/payForTickets\", _objectSpread({}, values));\n      if (res.status === 200) {\n        console.log(res.data);\n        var useremail = values.email;\n        try {\n          yield AsyncStorage.setItem(\"email\", useremail);\n          console.log(useremail);\n          navigation.dispatch(StackActions.replace(\"Tab\"));\n        } catch (e) {\n          console.log(\"The error is \" + e);\n        }\n      }\n    });\n    return function initializeTransaction(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsx(View, {\n    children: _jsx(Formik, {\n      initialValues: userInfo,\n      onSubmit: initializeTransaction,\n      children: function children(_ref3) {\n        var values = _ref3.values,\n          isSubmitting = _ref3.isSubmitting,\n          handleBlur = _ref3.handleBlur,\n          handleChange = _ref3.handleChange,\n          handleSubmit = _ref3.handleSubmit;\n        var title = values.title;\n        return _jsxs(_Fragment, {\n          children: [_jsx(FormInput, {\n            value: email,\n            autoCapitalize: \"none\",\n            label: \"Email\",\n            style: styles.text,\n            TextInputStyle: styles.textInput\n          }), _jsx(FormInput, {\n            onBlur: handleBlur(\"title\"),\n            value: title,\n            autoCapitalize: \"none\",\n            label: \"Title\",\n            style: styles.text,\n            TextInputStyle: styles.textInput\n          }), _jsx(FormSubmitBtn, {\n            Submitting: isSubmitting,\n            onPress: handleSubmit,\n            title: \"Initialize\"\n          })]\n        });\n      }\n    })\n  });\n};\nexport default ProcessDetailsScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  header: {\n    width: '100%',\n    backgroundColor: '#dcdcdc',\n    paddingTop: 48,\n    paddingBottom: 10,\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 22,\n    color: '#333',\n    fontWeight: 'bold'\n  },\n  panel: {\n    paddingTop: 10,\n    paddingHorizontal: 10\n  },\n  label: {\n    fontSize: 20\n  },\n  text: {\n    fontSize: 24,\n    paddingTop: 10\n  },\n  inputField: {\n    backgroundColor: '#fff',\n    height: 44,\n    borderWidth: 1,\n    borderColor: '#333',\n    width: '100%',\n    padding: 10,\n    marginTop: 12\n  },\n  button: {\n    margin: 10,\n    padding: 10,\n    backgroundColor: 'orange',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 4\n  },\n  buttonText: {\n    fontSize: 18,\n    color: '#444'\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","Formik","FormInput","Yup","FormSubmitBtn","AsyncStorage","client","axios","StackActions","useNavigation","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","ProcessDetailsScreen","navigation","_useState","_useState2","_slicedToArray","email","setEmail","getEmail","_ref","_asyncToGenerator","getItem","e","console","log","apply","arguments","userInfo","title","initializeTransaction","_ref2","values","res","post","_objectSpread","status","data","useremail","setItem","dispatch","replace","_x","View","children","initialValues","onSubmit","_ref3","isSubmitting","handleBlur","handleChange","handleSubmit","value","autoCapitalize","label","style","styles","text","TextInputStyle","textInput","onBlur","Submitting","onPress","StyleSheet","create","container","flex","header","width","backgroundColor","paddingTop","paddingBottom","borderBottomWidth","hairlineWidth","alignItems","fontSize","color","fontWeight","panel","paddingHorizontal","inputField","height","borderWidth","borderColor","padding","marginTop","button","margin","justifyContent","borderRadius","buttonText"],"sources":["C:/Users/STEPHEN/Desktop/busa_app1-main/screens/ProcessDetailsScreen.js"],"sourcesContent":["import { ActivityIndicator, StyleSheet, Text, TextInput, View } from 'react-native'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Formik } from 'formik'\r\nimport { FormInput } from '../Components/FormInput'\r\nimport * as Yup from \"yup\";\r\nimport { FormSubmitBtn } from '../Components/FormSubmitBtn';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport client from '../api/client';\r\nimport axios from 'axios';\r\nimport { StackActions, useNavigation } from '@react-navigation/native';\r\n\r\n\r\nconst ProcessDetailsScreen = () => {\r\n    const navigation = useNavigation()\r\n    const [email, setEmail] = useState(\"\")\r\n    // const [isLoading, setIsLoading] = useState(\"false\")\r\n\r\n    const getEmail = async()=>{\r\n        try{\r\n            const email = await AsyncStorage.getItem(\"email\")\r\n            // console.log(useremail)\r\n\r\n            if(email!==null){\r\n                setEmail(email)\r\n            }\r\n        }\r\n        catch(e){\r\n            console.log(`an error occured ${e}`)\r\n        }\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        getEmail()\r\n    },[])\r\n    const userInfo = {\r\n        email:email,\r\n        title:\"Game Show\",\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n//   const initializeTransaction = async (values)=>{\r\n//       await axios.post(`https://backendcode-usrb.onrender.com/api/pay/payForTicket`, {\r\n//     ...values,\r\n//     }).then((res) =>{\r\n\r\n//     //   if (res.status === 200){\r\n//     //     navigation.dispatch(\r\n//     //     StackActions.replace(\"CheckOutScreen\"\r\n//     //     , {\r\n//     //    authorization_url: res.data.authorization_url\r\n//     //     }\r\n//     //     )\r\n//     //     );\r\n//     // }\r\n//     console.log(res)\r\n//       }\r\n//     ).catch((e)=> {\r\n//         console.log(`The error is ${e}`)\r\n//       }\r\n//     )\r\n\r\n//     }\r\n\r\nconst initializeTransaction = async (values) => {\r\n    const res = await client.post(\"/pay/payForTickets\", {\r\n        ...values,\r\n    });\r\n    if (res.status === 200) {\r\n        console.log(res.data);\r\n        let useremail = values.email\r\n        try{\r\n        await AsyncStorage.setItem(\"email\", useremail)\r\n        console.log(useremail)\r\n        navigation.dispatch(StackActions.replace(\"Tab\"));\r\n        }catch(e){\r\n         console.log(`The error is ${e}`)\r\n        }\r\n    }\r\n    \r\n};\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n           <View>\r\n\t\t\t<Formik\r\n\t\t\t\tinitialValues={userInfo}\r\n\t\t\t\tonSubmit={initializeTransaction}\r\n\t\t\t>\r\n\t\t\t\t{({\r\n\t\t\t\t\tvalues,\r\n\t\t\t\t\tisSubmitting,\r\n\t\t\t\t\thandleBlur,\r\n\t\t\t\t\thandleChange,\r\n\t\t\t\t\thandleSubmit,\r\n\t\t\t\t}) => {\r\n\t\t\t\t\tconst {title} = values;\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<FormInput\r\n\t\t\t\t\t\t\t\t// onChangeText={handleChange(\"email\")}\r\n                                // placeholder=\"email@student.babcock.edu.ng\"\r\n\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\tautoCapitalize=\"none\"\r\n\t\t\t\t\t\t\t\tlabel={\"Email\"}\r\n\t\t\t\t\t\t\t\tstyle={styles.text}\r\n\t\t\t\t\t\t\t\tTextInputStyle={styles.textInput}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<FormInput\r\n\t\t\t\t\t\t\t\t// onChangeText={handleChange(\"title\")}\r\n                                // placeholder=\"Event Title\"\r\n\t\t\t\t\t\t\t\tonBlur={handleBlur(\"title\")}\r\n\t\t\t\t\t\t\t\tvalue={title}\r\n\t\t\t\t\t\t\t\tautoCapitalize=\"none\"\r\n\t\t\t\t\t\t\t\tlabel={\"Title\"}\r\n\t\t\t\t\t\t\t\tstyle={styles.text}\r\n\t\t\t\t\t\t\t\tTextInputStyle={styles.textInput}\r\n\t\t\t\t\t\t\t/>\r\n                                <FormSubmitBtn\r\n\t\t\t\t\t\t\t\t\tSubmitting={isSubmitting}\r\n\t\t\t\t\t\t\t\t\tonPress={handleSubmit}\r\n\t\t\t\t\t\t\t\t\ttitle={\"Initialize\"}\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t);\r\n\t\t\t\t}}\r\n\t\t\t</Formik>\r\n{/* \r\n<View style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Text style={styles.title}>Just an action from you</Text>\r\n      </View>\r\n      <View style={styles.panel}>\r\n        <Text style={styles.label}>Email </Text>\r\n        <TextInput\r\n          style={styles.inputField}\r\n          value={email}\r\n          placeholder=\"Email\"\r\n        />\r\n\r\n           <TextInput\r\n          style={styles.inputField}\r\n        //   value={title}\r\n          placeholder=\"title\"\r\n        />\r\n      </View>\r\n    </View> */}\r\n\t\t</View>\r\n  )\r\n}\r\n\r\nexport default ProcessDetailsScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n      },\r\n      header: {\r\n        width: '100%',\r\n        backgroundColor: '#dcdcdc',\r\n        paddingTop: 48,\r\n        paddingBottom: 10,\r\n        borderBottomWidth: StyleSheet.hairlineWidth,\r\n        alignItems: 'center',\r\n      },\r\n      title: {\r\n        fontSize: 22,\r\n        color: '#333',\r\n        fontWeight: 'bold',\r\n      },\r\n      panel: {\r\n        paddingTop: 10,\r\n        paddingHorizontal: 10,\r\n      },\r\n      label: {\r\n        fontSize: 20,\r\n      },\r\n      text: {\r\n        fontSize: 24,\r\n        paddingTop: 10,\r\n      },\r\n      inputField: {\r\n        backgroundColor: '#fff',\r\n        height: 44,\r\n        borderWidth: 1,\r\n        borderColor: '#333',\r\n        width: '100%',\r\n        padding: 10,\r\n        marginTop: 12,\r\n      },\r\n      button: {\r\n        margin: 10,\r\n        padding: 10,\r\n        backgroundColor: 'orange',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        borderRadius: 4,\r\n      },\r\n      buttonText: {\r\n        fontSize: 18,\r\n        color: '#444',\r\n      },\r\n    });\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}