{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { InputField } from \"../Components/InputField\";\nimport { StackActions, useNavigation } from '@react-navigation/native';\nimport { FormSubmitBtn } from \"../Components/FormSubmitBtn\";\nimport { COLORS } from \"../constants/theme\";\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport LottieView from 'lottie-react-native';\nimport client from \"../api/client\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nvar validationSchema = Yup.object({\n  email: Yup.string().trim().matches(/^[\\w-\\.]+@+([\\w-\\.])+babcock+(\\.)+edu(\\.)ng$/gi, \"School Email required\").required(\"Email is required!\"),\n  password: Yup.string().trim().min(8, \"Password not long enough!\").required(\"Password required!\")\n});\nvar LoginScreen = function LoginScreen() {\n  var navigation = useNavigation();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoading = _useState2[0],\n    setIsLoading = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    userToken = _useState4[0],\n    setUserToken = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    userInfo = _useState6[0],\n    setUserInfo = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    error = _useState8[0],\n    setError = _useState8[1];\n  var userInfos = {\n    email: \"\",\n    password: \"\"\n  };\n  var signIn = function () {\n    var _ref = _asyncToGenerator(function* (values) {\n      console.log(\"button works\");\n      try {\n        setIsLoading(true);\n        var res = yield client.post(\"/signin\", _objectSpread({}, values));\n        console.log(res);\n        if (res.status === 200) {\n          console.log(res.data);\n          var _userInfo = res.data.user;\n          console.log(_userInfo);\n          setUserInfo(_userInfo);\n          var token = res.data.refreshToken;\n          setUserToken(token);\n          try {\n            yield AsyncStorage.setItem(\"userInfo\", JSON.stringify(_userInfo));\n            yield AsyncStorage.setItem(\"userToken\", token);\n          } catch (e) {\n            console.log(\"Async Storage error: \" + e);\n          }\n          navigation.dispatch(StackActions.replace(\"Tab\"));\n          setIsLoading(false);\n        } else if (res.status === 401) {\n          setIsLoading(false);\n          setError(\"Invalid username or password.\");\n        }\n      } catch (e) {\n        console.log(e);\n        if (e.response && e.response.status === 401) {\n          setError(\"\" + e.response.data.error);\n        } else if (e.response && e.response.status === 400) {\n          setError(\"\" + e.response.data.error);\n        } else if (e.message === \"Network Error\" && e.code === \"ERR_NETWORK\") {\n          setError(\"Network error, lost connection!\");\n        } else {\n          setError(\"An error occurred. Please try again later.\");\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    });\n    return function signIn(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(SafeAreaView, {\n    style: {\n      flex: 1,\n      alignContent: 'center',\n      backgroundColor: COLORS.white\n    },\n    children: [_jsx(StatusBar, {\n      backgroundColor: COLORS.white\n    }), _jsx(KeyboardAvoidingView, {\n      enabled: true,\n      style: {\n        flex: 1\n      },\n      behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n      children: _jsx(ScrollView, {\n        bounces: false,\n        showsVerticalScrollIndicator: false,\n        children: _jsx(TouchableWithoutFeedback, {\n          onPress: Keyboard.dismiss,\n          children: _jsxs(View, {\n            style: {\n              paddingHorizontal: 25,\n              paddingTop: 40\n            },\n            children: [_jsx(View, {\n              style: {\n                alignItems: 'center'\n              },\n              children: _jsx(LottieView, {\n                source: require(\"../assets/animations/login.json\"),\n                style: {\n                  position: \"relative\",\n                  width: 250,\n                  height: 250,\n                  paddingTop: 3,\n                  alignSelf: \"center\"\n                },\n                loop: true,\n                autoPlay: true\n              })\n            }), _jsx(Text, {\n              style: {\n                fontFamily: 'Poppins2',\n                fontSize: 28,\n                fontWeight: '500',\n                paddingTop: 30,\n                color: COLORS.lightblue\n              },\n              children: \"Login\"\n            }), _jsx(View, {\n              style: {\n                paddingTop: error ? 40 : 30\n              },\n              children: _jsx(Formik, {\n                initialValues: userInfos,\n                validationSchema: validationSchema,\n                onSubmit: signIn,\n                children: function children(_ref2) {\n                  var values = _ref2.values,\n                    errors = _ref2.errors,\n                    touched = _ref2.touched,\n                    isSubmitting = _ref2.isSubmitting,\n                    handleBlur = _ref2.handleBlur,\n                    handleChange = _ref2.handleChange,\n                    handleSubmit = _ref2.handleSubmit;\n                  var email = values.email,\n                    password = values.password;\n                  return _jsxs(View, {\n                    children: [error && _jsx(Text, {\n                      style: {\n                        color: \"red\",\n                        fontFamily: \"Poppins\",\n                        fontSize: 13,\n                        bottom: 27\n                      },\n                      children: error\n                    }), errors.email && touched.email && _jsx(Text, {\n                      style: [styles.error, {\n                        top: error ? 4 : -20\n                      }],\n                      children: errors.email\n                    }), _jsx(InputField, {\n                      icon: _jsx(Ionicons, {\n                        name: \"mail\",\n                        size: 20,\n                        color: COLORS.lightblue,\n                        style: {\n                          marginRight: 5\n                        }\n                      }),\n                      onChangeText: handleChange(\"email\"),\n                      placeholder: \"email@student.babcock.edu.ng\",\n                      onBlur: handleBlur(\"email\"),\n                      value: email,\n                      autoCapitalize: \"none\",\n                      label: \"Email\",\n                      maxLength: 50,\n                      selectionColor: COLORS.lightblue\n                    }), errors.password && touched.password && _jsx(Text, {\n                      style: [styles.error, {\n                        top: error ? 65 : 45,\n                        alignContent: \"center\",\n                        right: width / 25,\n                        position: \"absolute\"\n                      }],\n                      children: errors.password\n                    }), _jsx(InputField, {\n                      icon: _jsx(Ionicons, {\n                        name: \"ios-lock-closed-outline\",\n                        size: 20,\n                        color: COLORS.lightblue,\n                        style: {\n                          marginRight: 5\n                        }\n                      }),\n                      inputType: \"password\",\n                      fieldButtonLabel: \"Forgot?\",\n                      fieldButtonFunction: function fieldButtonFunction() {\n                        return navigation.navigate(\"password\");\n                      },\n                      placeholder: \"*********\",\n                      onChangeText: handleChange(\"password\"),\n                      onBlur: handleBlur(\"password\"),\n                      error: touched.password && errors.password,\n                      value: password,\n                      secureTextEntry: true,\n                      autoCapitalize: \"none\",\n                      maxLength: 32,\n                      selectionColor: COLORS.lightblue,\n                      cursorColor: COLORS.lightblue\n                    }), isLoading ? _jsx(View, {\n                      children: _jsx(ActivityIndicator, {\n                        size: \"large\",\n                        color: COLORS.lightblue\n                      })\n                    }) : _jsx(FormSubmitBtn, {\n                      onPress: handleSubmit,\n                      title: \"Log in\"\n                    })]\n                  });\n                }\n              })\n            }), _jsxs(View, {\n              style: {\n                flexDirection: 'row',\n                justifyContent: 'center',\n                paddingTop: 50\n              },\n              children: [_jsx(Text, {\n                style: {\n                  fontFamily: \"Poppins\"\n                },\n                children: \"Don't have an account?\"\n              }), _jsx(TouchableOpacity, {\n                onPress: function onPress() {\n                  return navigation.navigate('Sign-up');\n                },\n                children: _jsx(Text, {\n                  style: {\n                    color: COLORS.lightblue,\n                    paddingBottom: 2,\n                    fontFamily: \"Poppins3\",\n                    fontSize: 13\n                  },\n                  children: \" Register\"\n                })\n              })]\n            })]\n          })\n        })\n      })\n    })]\n  });\n};\nexport default LoginScreen;\nvar styles = StyleSheet.create({\n  error: {\n    fontFamily: \"Poppins\",\n    fontSize: 12,\n    color: \"red\",\n    right: 15,\n    position: \"absolute\",\n    top: 5\n  }\n});","map":{"version":3,"names":["React","useState","SafeAreaView","View","Text","TouchableOpacity","Image","KeyboardAvoidingView","TouchableWithoutFeedback","Keyboard","ScrollView","Dimensions","StyleSheet","StatusBar","ActivityIndicator","Ionicons","InputField","StackActions","useNavigation","FormSubmitBtn","COLORS","Yup","Formik","LottieView","client","AsyncStorage","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","width","height","validationSchema","object","email","string","trim","matches","required","password","min","LoginScreen","navigation","_useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","userToken","setUserToken","_useState5","_useState6","userInfo","setUserInfo","_useState7","_useState8","error","setError","userInfos","signIn","_ref","_asyncToGenerator","values","console","log","res","post","_objectSpread","status","data","user","token","refreshToken","setItem","JSON","stringify","e","dispatch","replace","response","message","code","_x","apply","arguments","style","flex","alignContent","backgroundColor","white","children","enabled","behavior","Platform","OS","bounces","showsVerticalScrollIndicator","onPress","dismiss","paddingHorizontal","paddingTop","alignItems","source","require","position","alignSelf","loop","autoPlay","fontFamily","fontSize","fontWeight","color","lightblue","initialValues","onSubmit","_ref2","errors","touched","isSubmitting","handleBlur","handleChange","handleSubmit","bottom","styles","top","icon","name","size","marginRight","onChangeText","placeholder","onBlur","value","autoCapitalize","label","maxLength","selectionColor","right","inputType","fieldButtonLabel","fieldButtonFunction","navigate","secureTextEntry","cursorColor","title","flexDirection","justifyContent","paddingBottom","create"],"sources":["C:/Users/STEPHEN/Desktop/busa_app1-main/screens/LoginScreen.js"],"sourcesContent":["// import { StyleSheet, Text, View, Dimensions, StatusBar, SafeAreaView, KeyboardAvoidingView, ScrollView, TouchableWithoutFeedback, Keyboard} from \"react-native\";\r\n// import React from \"react\";\r\n// import LottieView from \"lottie-react-native\";\r\n// const { width, height } = Dimensions.get(\"window\");\r\n// import { SignInForm } from \"../Components/SigninForm\";\r\n// import { useNavigation } from \"@react-navigation/native\";\r\n// import { COLORS } from \"../constants/theme\";\r\n\r\n\r\n// const LoginScreen = () => {\r\n// \tconst navigation = useNavigation();\r\n// \treturn (\r\n// \t\t<SafeAreaView style={styles.container}>\r\n// \t\t\t<StatusBar hidden />\r\n// \t\t\t<KeyboardAvoidingView\r\n// \t\t\tenabled\r\n// \t\t\tstyle={{ flex: 1 }}\r\n// \t\t\tbehavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n// \t\t\t>\r\n// \t\t\t\t<ScrollView\r\n// \t\t\t\tshowsVerticalScrollIndicator={false}\r\n// \t\t\t\tbounces={false}\r\n// \t\t\t\t// contentContainerStyle={{height:height}}\r\n// \t\t\t\t>\r\n// \t\t\t\t\t{/* <TouchableWithoutFeedback onPress={Keyboard.dismiss}> */}\r\n// \t\t\t\t\t\t<View>\r\n// \t\t\t<View\r\n// \t\t\t\tstyle={{\r\n// \t\t\t\t\tbackgroundColor: COLORS.primaryblue,\r\n// \t\t\t\t\theight: 0.5 * height,\r\n// \t\t\t\t\tborderBottomRightRadius: 100,\r\n// \t\t\t\t\talignItems: \"center\",\r\n// \t\t\t\t}}\r\n// \t\t\t>\r\n// \t\t\t\t<Text\r\n// \t\t\t\t\tstyle={{\r\n// \t\t\t\t\t\tcolor: COLORS.white,\r\n// \t\t\t\t\t\tfontSize: 35,\r\n// \t\t\t\t\t\tfontWeight: \"600\",\r\n// \t\t\t\t\t\tpaddingTop:70,\r\n// \t\t\t\t\t\tfontFamily:\"Poppins3\"\r\n// \t\t\t\t\t}}\r\n// \t\t\t\t>\r\n// \t\t\t\t\tWelcome\r\n// \t\t\t\t</Text>\r\n// \t\t\t\t<LottieView\r\n// \t\t\t\t\tsource={require(\"../assets/animations/information.json\")}\r\n// \t\t\t\t\tstyle={{\r\n// \t\t\t\t\t\tposition: \"relative\",\r\n// \t\t\t\t\t\twidth: height/2.5,\r\n// \t\t\t\t\t\theight: height/2.5,\r\n// \t\t\t\t\t\tpaddingTop:3,\r\n// \t\t\t\t\t\talignSelf: \"center\",\r\n// \t\t\t\t\t}}\r\n// \t\t\t\t\tloop={true}\r\n// \t\t\t\t\tautoPlay\r\n// \t\t\t\t/>\r\n// \t\t\t</View>\r\n\r\n\r\n// \t\t\t<View \r\n// \t\t\t>\r\n// \t\t\t\t<View\r\n// \t\t\t\t\tstyle={{\r\n// \t\t\t\t\t\t...StyleSheet.absoluteFillObject,\r\n// \t\t\t\t\t\tbackgroundColor: COLORS.primaryblue,\r\n// \t\t\t\t\t}}\r\n// \t\t\t\t/>\r\n// \t\t\t\t<View\r\n// \t\t\t\t\tstyle={{\r\n// \t\t\t\t\t\tpaddingTop: 12.5,\r\n// \t\t\t\t\t    //  flex: 1,\r\n// \t\t\t\t\t\tbackgroundColor: COLORS.white,\r\n// \t\t\t\t\t\tborderTopLeftRadius: 100,\r\n// \t\t\t\t\t\talignItems: \"center\",\r\n// \t\t\t\t\t\theight:height/2\r\n// \t\t\t\t\t}}\r\n// \t\t\t\t>\r\n// \t\t\t\t\t<SignInForm/>\r\n// \t\t\t\t\t<View style={{\r\n// \t\t\t\t\t\tpaddingTop:250,\r\n// \t\t\t\t\t\t position:\"absolute\"\r\n// \t\t\t\t\t\t}}>\r\n// \t\t\t\t\t<Text\r\n// \t\t\t\t\t\tstyle={{\r\n// \t\t\t\t\t\t\tfontWeight: \"400\",\r\n// \t\t\t\t\t\t\tfontSize: 15,\r\n// \t\t\t\t\t\t\tcolor: COLORS.blendgray,\r\n// \t\t\t\t\t\t\ttextAlign: \"center\",\r\n// \t\t\t\t\t\t\talignSelf: \"center\",\r\n// \t\t\t\t\t\t\tmarginTop: 20,\r\n// \t\t\t\t\t\t\tmarginBottom: 10,\r\n// \t\t\t\t\t\t\tfontFamily:\"Poppins\"\r\n// \t\t\t\t\t\t}}\r\n// \t\t\t\t\t>\r\n// \t\t\t\t\t\tor\r\n// \t\t\t\t\t</Text>\r\n// \t\t\t\t\t<View style={{flexDirection: \"row\"}}>\r\n// \t\t\t\t\t\t<Text style={{ textAlign: \"center\", fontFamily:\"Poppins\" }}>Don't have an account?</Text>\r\n// \t\t\t\t\t\t<Text\r\n// \t\t\t\t\t\t\tstyle={{ color: COLORS.primaryblue, fontWeight: \"500\", marginLeft: 5, fontFamily:\"Poppins3\"}}\r\n// \t\t\t\t\t\t\tonPress={() => navigation.navigate(\"Sign-up\")\r\n// \t\t\t\t\t\t}\r\n// \t\t\t\t\t\t>\r\n// \t\t\t\t\t\t\tSign up\r\n// \t\t\t\t\t\t</Text>\r\n// \t\t\t\t\t</View>\r\n// \t\t\t\t\t</View>\r\n// \t\t\t\t</View>\r\n\r\n// \t\t\t         </View>\r\n\r\n// \t\t\t\t\t </View>\r\n// \t\t\t\t\t{/* </TouchableWithoutFeedback> */}\r\n// \t\t\t\t</ScrollView>\r\n\t\t\t\r\n// \t\t\t</KeyboardAvoidingView>\r\n// \t\t</SafeAreaView>\r\n// \t);\r\n// };\r\n\r\n// export default LoginScreen;\r\n\r\n// const styles = StyleSheet.create({\r\n// \tcontainer: {\r\n// \t\tflex: 1,\r\n// \t\tbackgroundColor: COLORS.white,\r\n// \t\talignContent: \"center\",\r\n// \t},\r\n// });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport {\r\n  SafeAreaView,\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  Image,\r\n  KeyboardAvoidingView,\r\n  TouchableWithoutFeedback,\r\n  Keyboard,\r\n  ScrollView,\r\n  Dimensions,\r\n  StyleSheet,\r\n  StatusBar,\r\n  ActivityIndicator\r\n} from 'react-native';\r\n\r\n\r\nimport Ionicons from 'react-native-vector-icons/Ionicons';\r\nimport {InputField} from '../Components/InputField';\r\nimport { StackActions, useNavigation } from '@react-navigation/native';\r\nimport { FormSubmitBtn } from '../Components/FormSubmitBtn';\r\nimport { COLORS } from '../constants/theme';\r\nimport * as Yup from \"yup\";\r\nimport { Formik } from \"formik\";\r\nimport LottieView from 'lottie-react-native';\r\nimport client from '../api/client';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nconst {width, height} = Dimensions.get(\"screen\")\r\n\r\nconst validationSchema = Yup.object({\r\n\temail: Yup.string()\r\n\t  .trim()\r\n\t  .matches(\r\n\t\t/^[\\w-\\.]+@+([\\w-\\.])+babcock+(\\.)+edu(\\.)ng$/gi,\r\n\t\t\"School Email required\"\r\n\t  )\r\n\t  .required(\"Email is required!\"),\r\n\tpassword: Yup.string()\r\n\t  .trim()\r\n\t  .min(8, \"Password not long enough!\")\r\n\t  .required(\"Password required!\"),\r\n  });\r\n\r\nconst LoginScreen = () => {\r\n\r\n\tconst navigation = useNavigation()\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n  const [userToken, setUserToken] = useState(null);\r\n  const [userInfo, setUserInfo] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  const userInfos = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n\r\n  const signIn = async (values) => {\r\n    console.log(\"button works\");\r\n    try {\r\n      setIsLoading(true);\r\n      const res = await client.post(\"/signin\", {\r\n        ...values,\r\n      });\r\n\r\n      console.log(res);\r\n      if (res.status === 200) {\r\n        // also store the users values as an object and pass it round\r\n        console.log(res.data);\r\n        let userInfo = res.data.user;\r\n        console.log(userInfo);\r\n\r\n        setUserInfo(userInfo);\r\n        let token = res.data.refreshToken;\r\n        setUserToken(token);\r\n\r\n        try {\r\n          //axios.defaults.headers.common.Authorization = `Bearer ${token}`\r\n          // stringify the user object\r\n          await AsyncStorage.setItem(\"userInfo\", JSON.stringify(userInfo));\r\n\r\n          // get the user token\r\n          await AsyncStorage.setItem(\"userToken\", token);\r\n        } catch (e) {\r\n          console.log(`Async Storage error: ${e}`);\r\n        }\r\n        navigation.dispatch(StackActions.replace(\"Tab\"));\r\n        setIsLoading(false);\r\n      } else if (res.status === 401) {\r\n        setIsLoading(false);\r\n        setError(\"Invalid username or password.\");\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n      if (e.response && e.response.status === 401) {\r\n        setError(`${e.response.data.error}`);\r\n      } else if (e.response && e.response.status === 400) {\r\n        setError(`${e.response.data.error}`);\r\n      } else if (e.message === \"Network Error\" && e.code === \"ERR_NETWORK\") {\r\n        setError(\"Network error, lost connection!\");\r\n      } else {\r\n        setError(\"An error occurred. Please try again later.\");\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <SafeAreaView style={{flex: 1, alignContent: 'center', backgroundColor:COLORS.white}}>\r\n\t\t<StatusBar backgroundColor={COLORS.white}/>\r\n\t\t<KeyboardAvoidingView\r\n\t\tenabled\r\n\t\t\t\t\tstyle={{ flex: 1}}\r\n\t\t\t\t\tbehavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n\t\t>\r\n\r\n<ScrollView\r\nbounces ={false}\r\nshowsVerticalScrollIndicator={false}\r\n>\r\n<TouchableWithoutFeedback onPress={Keyboard.dismiss}>\r\n      <View style={{paddingHorizontal: 25, paddingTop:40}}>\r\n         <View style={{alignItems: 'center'}}>\r\n\t\t \r\n<LottieView\r\n\t\t\t\t\tsource={require(\"../assets/animations/login.json\")}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tposition: \"relative\",\r\n\t\t\t\t\t\twidth: 250,\r\n\t\t\t\t\t\theight: 250,\r\n\t\t\t\t\t\tpaddingTop:3,\r\n\t\t\t\t\t\talignSelf: \"center\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tloop={true}\r\n\t\t\t\t\tautoPlay\r\n\t\t\t\t/>\r\n         </View> \r\n\r\n        <Text\r\n          style={{\r\n            fontFamily: 'Poppins2',\r\n            fontSize: 28,\r\n            fontWeight: '500',\r\n\t\t\tpaddingTop:30,\r\n\t\t\tcolor:COLORS.lightblue\r\n          }}>\r\n          Login\r\n        </Text>\r\n\r\n\r\n\t\t<View style={{paddingTop: error? 40: 30}}>\r\n<Formik\r\n initialValues={userInfos}\r\n validationSchema={validationSchema}\r\n onSubmit={signIn}\r\n>\r\n\t{({\r\nvalues,\r\n      errors,\r\n            touched,\r\n            isSubmitting,\r\n            handleBlur,\r\n            handleChange,\r\n            handleSubmit,\r\n\t})=>{\r\nconst {email, password} = values\r\nreturn(\r\n<View>\r\n{error && (\r\n                    <Text\r\n                      style={{\r\n                        color: \"red\",\r\n                        fontFamily: \"Poppins\",\r\n                        fontSize: 13,\r\n\t\t\t\t\t\tbottom:27\r\n                      }}\r\n                    >\r\n                      {error}\r\n                    </Text>\r\n                  )}\r\n\r\n\r\n{errors.email && touched.email && (\r\n                    <Text\r\n                      style={\r\n\t\t\t\t\t\t[\r\n\t\t\t\t\tstyles.error,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttop: error? 4:-20\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t}\r\n                    >\r\n                      {errors.email}\r\n                    </Text>\r\n                  )}\t\t\t  \r\n\r\n<InputField\r\n  icon={\r\n\t<Ionicons\r\n\tname=\"mail\"\r\n\tsize={20}\r\n\tcolor={COLORS.lightblue}\r\n\tstyle={{marginRight: 5}}\r\n  />\r\n  }\r\n  onChangeText={handleChange(\"email\")}\r\n  placeholder=\"email@student.babcock.edu.ng\"\r\n  onBlur={handleBlur(\"email\")}\r\n  value={email}\r\n  autoCapitalize=\"none\"\r\n  label={\"Email\"}\r\n  maxLength={50}\r\n  selectionColor={COLORS.lightblue}\r\n/>\r\n\r\n{errors.password && touched.password && (\r\n                    <Text\r\n                      style={\r\n\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\tstyles.error,\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t  top: error? 65 : 45,\r\n\t\t\t\t\t\t\t  alignContent: \"center\",\r\n\t\t\t\t\t\t\t  right: width / 25,\r\n                position:\"absolute\"\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t  ]}\r\n                    >\r\n                      {errors.password}\r\n                    </Text>\r\n                  )}\r\n<InputField\r\n  icon={\r\n\t<Ionicons\r\n\tname=\"ios-lock-closed-outline\"\r\n\tsize={20}\r\n\tcolor={COLORS.lightblue}\r\n\tstyle={{marginRight: 5}}\r\n  />\r\n  }\r\n  inputType=\"password\"\r\n  fieldButtonLabel={\"Forgot?\"}\r\n  fieldButtonFunction={()=> navigation.navigate(\"password\")}\r\n  placeholder=\"*********\"\r\n  onChangeText={handleChange(\"password\")}\r\n  onBlur={handleBlur(\"password\")}\r\n  error={touched.password && errors.password}\r\n  value={password}\r\n  secureTextEntry\r\n  autoCapitalize=\"none\"\r\n  maxLength={32}\r\n  selectionColor={COLORS.lightblue}\r\n  cursorColor={COLORS.lightblue}\r\n/>\r\n\r\n{isLoading ? (\r\n                    <View>\r\n                      <ActivityIndicator\r\n                        size=\"large\"\r\n                        color={COLORS.lightblue}\r\n                      />\r\n                    </View>\r\n                  ) : (\r\n                    <FormSubmitBtn \r\n                    onPress={handleSubmit} \r\n                    title={\"Log in\"} \r\n                    />\r\n                  )}\r\n</View>\r\n\r\n)\r\n\r\n\t}}\r\n</Formik>\r\n\t\t</View>\r\n        <View\r\n          style={{\r\n            flexDirection: 'row',\r\n            justifyContent: 'center',\r\n\t\t\tpaddingTop:50\r\n          }}>\r\n          <Text style={{fontFamily:\"Poppins\"}}>Don't have an account?</Text>\r\n          <TouchableOpacity onPress={() => navigation.navigate('Sign-up')}>\r\n            <Text style={{color:COLORS.lightblue,  paddingBottom:2, fontFamily:\"Poppins3\", fontSize:13}}> Register</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n      </View>\r\n\t</TouchableWithoutFeedback>\r\n</ScrollView>\r\n\t\t</KeyboardAvoidingView>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n\terror: {\r\n\t\tfontFamily: \"Poppins\",\r\n\t\tfontSize: 12,\r\n\t\tcolor: \"red\",\r\n\t\tright: 15,\r\n\t\tposition: \"absolute\",\r\n\t\ttop: 5,\r\n\t  },\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}